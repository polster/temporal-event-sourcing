services:
  ##########
  # postgres
  ##########

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_ADMIN_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD:-supersecret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@localdev.me}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-supersecret}
    ports:
      - 16543:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json:ro

  #######
  # Kafka
  #######

  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.6.1
    command:
      ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.6.1
    command: [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties \
        --override listeners=$${KAFKA_LISTENERS} \
        --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
        --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} \
        --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
        --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}",
      ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    ports:
      - "8083:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      # Specific jvm opts to avoid crashes, see https://github.com/obsidiandynamics/kafdrop/blob/master/README.md
      JVM_OPTS: "-Xms16M -Xmx48M -Xss4m -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  apicurio:
    image: apicurio/apicurio-registry-mem:2.4.4.Final
    ports:
      - "8081:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092

volumes:
  postgres_data:
  pgadmin_data:
